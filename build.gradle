plugins {
    id 'java'
    id 'war'
    id 'eclipse' // ✅ 요거 추가!!!
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.kosa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' } // obs-websocket-client를 jitpack에서 제공
}

// ✅ Jetty 9으로 강제 고정
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group.startsWith("org.eclipse.jetty")) {
            details.useVersion "9.4.49.v20220914"
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'  // MyBatis 스프링 부트 스타터
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'          // JDBC 지원
    runtimeOnly 'com.mysql:mysql-connector-j'                                  // MySQL 드라이버 (DB에 따라 변경)
	
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// JPA (Spring Data JPA)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    implementation 'commons-io:commons-io:2.11.0'
    
    // 웹소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    // OBS Websocket 사용 
    implementation 'io.obs-websocket.community:client:2.0.0' // OBS WebSocket 클라이언트
    implementation 'com.google.code.gson:gson:2.10.1'        // JSON 직렬화/역직렬화용
    
    // OBS Websocket 2.0.0 버전에 맞게 jetty 9버전 사용
    implementation 'org.eclipse.jetty:jetty-client:9.4.49.v20220914'
    implementation 'org.eclipse.jetty:jetty-util:9.4.49.v20220914'
    implementation 'org.eclipse.jetty:jetty-http:9.4.49.v20220914'
    implementation 'org.eclipse.jetty.websocket:websocket-client:9.4.49.v20220914'

	// Redis 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
    useJUnitPlatform()
}