plugins {
    id 'java'
    id 'war'
    id 'eclipse' // ✅ 요거 추가!!!
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.kosa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'  // MyBatis 스프링 부트 스타터
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'          // JDBC 지원
    runtimeOnly 'com.mysql:mysql-connector-j'                                  // MySQL 드라이버 (DB에 따라 변경)
	
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// JPA (Spring Data JPA)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

tasks.named('test') {
    useJUnitPlatform()
}
