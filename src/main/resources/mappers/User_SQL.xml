<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="org.kosa.shoppingmaillmanager.user.UserDAO">

	<sql id="search">
		<if test="searchValue != null and searchValue != ''">
			WHERE userid LIKE concat(concat('%', #{searchValue}), '%')
		</if>
	</sql>
	
	<select id="getUser" resultType="org.kosa.shoppingmaillmanager.user.User">
		SELECT m.*,
		h.business_no, h.bank_name, h.account_no, h.channel_name,
		h.intro, h.status,  h.approved_yn
		FROM tb_member m left join tb_host h ON m.user_id = h.user_id
		WHERE m.user_id = #{user_id}
	</select>
	
	
	<insert id="insertMember">
		INSERT into tb_member 
		(user_id, password, name, nickname, email, phone, zipcode, address, myaddress,
		 birth_date, gender, profile_img, marketing_agree, grade_id)
		VALUES (#{user_id}, #{password}, #{name}, #{nickname}, #{email}, 
		#{phone}, #{zipcode}, #{address}, #{myaddress}, #{birth_date},
		#{gender}, #{profile_img}, #{marketing_agree}, "HOST")
	</insert>
	
	<insert id="insertHost">
		INSERT into tb_host
		(user_id, business_no, bank_name, account_no, channel_name, intro)
		VALUES (#{user_id}, #{business_no}, #{bank_name}, #{account_no}, 
		#{channel_name}, #{intro})
	</insert>
	
	<update id="setLoginTime" parameterType="String">
		UPDATE tb_member SET
			last_login = now()
		WHERE user_id = #{user_id}
	</update>
	
	<update id="increaseFailCount">
	  UPDATE tb_member SET login_fail_cnt = login_fail_cnt + 1 WHERE user_id = #{userid}
	</update>
	
	<select id="getFailCount"  resultType="java.lang.Integer">
	    SELECT COALESCE(login_fail_cnt, 0) FROM tb_member WHERE user_id = #{user_id}
	</select>
	
	<update id="lockUser">
	    UPDATE tb_member SET status = 'N' WHERE user_id = #{user_id}
	</update>
	
	<update id="resetFailCount" parameterType="String">
		UPDATE tb_member SET login_fail_cnt = 0, status = 'Y' WHERE user_id = #{user_id}
	</update>
	
	<select id="findByNameAndEmail"  resultType="org.kosa.shoppingmaillmanager.user.User">
	  SELECT * FROM tb_member
	  WHERE name = #{name} AND email = #{email}
	</select>
	
	<select id="findByUserIdAndEmail"  resultType="org.kosa.shoppingmaillmanager.user.User">
	  SELECT * FROM tb_member
	  WHERE user_id = #{user_id} AND email = #{email}
	</select>
	
	<update id="updatePassword">
	    UPDATE tb_member SET password = #{password} WHERE user_id = #{user_id}
	</update>
	
	<select id="getUserList" resultType="org.kosa.shoppingmaillmanager.user.UserListDTO">
		SELECT *
		FROM tb_member
		<where>
		<choose>
		  <when test="filterType eq 'locked'">
		  	AND secession_yn = 'N'
		    AND blacklisted = 'Y'
		    OR status = 'N'
		  </when>
		  <when test="filterType eq 'widthdrawn'">
		    AND secession_yn = 'Y'
		  </when>
		  <otherwise>
		    <if test="excludeGrades != null">
		      grade_id NOT IN
		      <foreach item="grade" collection="excludeGrades" open="(" separator="," close=")">
		        #{grade}
		      </foreach>
		    </if>
		    <if test="grade_id != null and grade_id != ''">
		      AND grade_id = #{grade_id}
		    </if>
		    <if test="blacklisted != null">
		      AND blacklisted = #{blacklisted}
		    </if>
		    <if test="status != null">
		      AND status = #{status}
		    </if>
		    <if test="secession_yn != null">
		      AND secession_yn = #{secession_yn}
		    </if>
		  </otherwise>
		</choose>
		  
			<if test="searchValue != null and searchValue !=''">
				<choose>
					<when test="searchColumn == null or searchColumn == ''">
					AND (
						user_id LIKE CONCAT('%', #{searchValue}, '%')
						OR name LIKE CONCAT('%', #{searchValue}, '%')
					)
					</when>
					<when test="searchColumn == 'user_id'">
						AND user_id LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'name'">
						AND name LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'nickname'">
						AND nickname LIKE CONCAT('%', #{searchValue}, '%')
					</when>
				</choose>
			</if>
		</where>
		<choose>
			<when test="sortOption == 'created_date_desc'">
				ORDER BY created_date DESC
			</when>
			<when test="sortOption == 'created_date_asc'">
				ORDER BY created_date ASC
			</when>
			<when test="sortOption == 'user_id_desc'">
				ORDER BY user_id DESC
			</when>
			<when test="sortOption == 'user_id_asc'">
				ORDER BY user_id ASC
			</when>
			<when test="sortOption == 'name_desc'">
				ORDER BY name DESC
			</when>
			<when test="sortOption == 'name_asc'">
				ORDER BY name ASC
			</when>
			<when test="sortOption == 'nickname_desc'">
				ORDER BY nickname DESC
			</when>
			<when test="sortOption == 'nickname_asc'">
				ORDER BY nickname ASC
			</when>
			<otherwise>
				ORDER BY created_date DESC
			</otherwise>
		</choose>
		LIMIT #{size} OFFSET #{start}
	</select>
	
	
	<select id="countUserList" resultType="int">
		SELECT count(distinct user_id) FROM tb_member
		<where>
		<choose>
		  <when test="filterType eq 'locked'">
		  	AND secession_yn = 'N'
		    AND blacklisted = 'Y'
		    OR status = 'N'
		  </when>
		  <when test="filterType eq 'widthdrawn'">
		    AND secession_yn = 'Y'
		  </when>
		  <otherwise>
		    <if test="excludeGrades != null">
		      grade_id NOT IN
		      <foreach item="grade" collection="excludeGrades" open="(" separator="," close=")">
		        #{grade}
		      </foreach>
		    </if>
		    <if test="grade_id != null and grade_id != ''">
		      AND grade_id = #{grade_id}
		    </if>
		    <if test="blacklisted != null">
		      AND blacklisted = #{blacklisted}
		    </if>
		    <if test="status != null">
		      AND status = #{status}
		    </if>
		    <if test="secession_yn != null">
		      AND secession_yn = #{secession_yn}
		    </if>
		  </otherwise>
		</choose>
		
		  <if test="status != null">
		    AND status = #{status}
		  </if>
			<if test="searchValue != null and searchValue !=''">
				<choose>
					<when test="searchColumn == null or searchColumn == ''">
					AND (
						user_id LIKE CONCAT('%', #{searchValue}, '%')
						OR name LIKE CONCAT('%', #{searchValue}, '%')
					)
					</when>
					<when test="searchColumn == 'user_id'">
						AND user_id LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'name'">
						AND name LIKE CONCAT('%', #{searchValue}, '%')
					</when>
					<when test="searchColumn == 'nickname'">
						AND nickname LIKE CONCAT('%', #{searchValue}, '%')
					</when>
				</choose>
			</if>
		</where>
		<choose>
			<when test="sortOption == 'created_date_desc'">
				ORDER BY created_date DESC
			</when>
			<when test="sortOption == 'created_date_asc'">
				ORDER BY created_date ASC
			</when>
			<when test="sortOption == 'user_id_desc'">
				ORDER BY user_id DESC
			</when>
			<when test="sortOption == 'user_id_asc'">
				ORDER BY user_id ASC
			</when>
			<when test="sortOption == 'name_desc'">
				ORDER BY name DESC
			</when>
			<when test="sortOption == 'name_asc'">
				ORDER BY name ASC
			</when>
			<otherwise>
				ORDER BY created_date DESC
			</otherwise>
		</choose>
	</select>
	
	<update id="updateUser" parameterType="org.kosa.shoppingmaillmanager.user.User">
	  UPDATE tb_member
	  SET
	    password = #{password},
	    name = #{name},
	    email = #{email},
	    phone = #{phone},
	    zipcode = #{zipcode},
	    address = #{address},
	    birth_date = #{birth_date},
	    gender = #{gender},
	    succession_yn = #{succession_yn},
	    blacklisted = #{blacklisted},
	    session_date = #{session_date},
	    login_fail_cnt = #{login_fail_cnt},
	    status = #{status},
	    last_login = #{last_login},
	    marketing_agree = #{marketing_agree},
	    social_id = #{social_id},
	    marketing_agent = #{marketing_agent},
	    grade_id = #{grade_id},
	    myaddress = #{myaddress},
	    secession_yn = #{secession_yn},
	    secession_date = #{secession_date},
	    profile_img = #{profile_img},
	    social_type = #{social_type},
	    nickname = #{nickname},
	    updated_date = NOW()
	   WHERE user_id = #{user_id};
	</update>
	
	<update id="updateHost">
		UPDATE tb_host SET
		    business_no = #{business_no},
	        bank_name = #{bank_name},
	        account_no = #{account_no},
	        channel_name = #{channel_name},
	        intro = #{intro},
	        approved_yn = #{approved_yn}
	  	WHERE user_id = #{user_id};
	</update>
	
	<update id="secessionUser">
		UPDATE tb_member SET
		secession_yn = 'Y',
		secession_date = NOW()
		WHERE user_id = #{user_id}
	</update>
</mapper>