<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="org.kosa.shoppingmaillmanager.host.product.ProductDAO">

	<!-- 상품 리스트 조회 -->
	<select id="selectProductList" parameterType="map"
		resultType="org.kosa.shoppingmaillmanager.host.product.dto.ProductSimpleDTO">
		SELECT * FROM (
		SELECT
		p.PRODUCT_ID AS productId,
		p.NAME AS name,
		p.PRICE
		AS price,
		p.category_id AS categoryId,
		p.SALE_PRICE AS salePrice,
		p.PRODUCT_STATUS AS productStatus,
		p.DISPLAY_YN AS displayYn,
		p.STOCK AS
		stock,
		p.PRODUCT_REVIEW_COUNT AS
		productReviewCount,
		p.MAIN_IMAGE AS
		mainImage,
		p.CREATED_DATE AS
		createdDate,
		p.UPDATED_DATE AS updatedDate,
		c1.name AS mainCategoryName,
		c2.name AS subCategoryName,
		(
		SELECT
		IFNULL(SUM(oi.QUANTITY), 0)
		FROM
		tb_order_item oi
		WHERE oi.product_id =
		p.product_id
		) AS
		productSalesCount
		FROM tb_product p
		LEFT JOIN
		tb_category c2 ON
		p.category_id = c2.category_id
		LEFT JOIN tb_category
		c1 ON
		c2.parent_category_id = c1.category_id
		WHERE p.host_id = #{hostId}
		<if test="status != null">
			AND p.product_status = #{status}
		</if>
		<if test="categoryId != null">
			AND (
			p.category_id = #{categoryId}
			OR p.category_id IN (
			SELECT category_id FROM tb_category WHERE parent_category_id =
			#{categoryId}
			)
			)
		</if>
		<if test="keyword != null and keyword != ''">
			AND (
			p.name LIKE CONCAT('%', #{keyword}, '%')
			OR
			p.product_id LIKE CONCAT('%', #{keyword}, '%')
			)
		</if>
		) t
		ORDER BY
		<choose>
			<when test="sort == 'productSalesCount'">t.productSalesCount DESC</when>
			<when test="sort == 'productReviewCount'">t.productReviewCount DESC</when>
			<when test="sort == 'stock'">t.stock ASC</when>
			<otherwise>t.createdDate DESC</otherwise>
		</choose>
		LIMIT #{offset}, #{limit}
	</select>

	<!-- 상품 개수 조회 -->
	<select id="countProductList" parameterType="map"
		resultType="long">
		SELECT COUNT(*)
		FROM tb_product p
		WHERE p.host_id = #{hostId}
		<if test="status != null">
			AND p.product_status = #{status}
		</if>
		<if test="categoryId != null">
			AND (
			p.category_id = #{categoryId}
			OR p.category_id IN (
			SELECT category_id FROM tb_category WHERE parent_category_id =
			#{categoryId}
			)
			)
		</if>
		<if test="keyword != null and keyword != ''">
			AND (
			p.name LIKE CONCAT('%', #{keyword}, '%')
			OR
			p.product_id LIKE CONCAT('%', #{keyword}, '%')
			)
		</if>
	</select>

	<!-- 상품 상태별 카운트 -->
	<select id="countProductStatusMapRaw" parameterType="string"
		resultType="map">
		SELECT
		PRODUCT_STATUS AS status,
		COUNT(*) AS cnt
		FROM
		tb_product
		WHERE host_id = #{hostId}
		GROUP BY PRODUCT_STATUS
	</select>

	<!-- 진열 상태 변경 -->
	<update id="updateDisplayYn">
		UPDATE tb_product
		SET display_yn = #{displayYn},
		UPDATED_DATE = NOW()
		WHERE product_id = #{productId}
	</update>

	<select id="selectProductById"
		resultType="org.kosa.shoppingmaillmanager.host.product.dto.ProductSimpleDTO"
		parameterType="map">
		SELECT
		p.product_id AS productId,
		p.name,
		p.price,
		p.sale_price AS salePrice,
		p.stock,
		p.category_id AS categoryId,
		p.product_short_description AS productShortDescription,
		p.product_status AS productStatus,
		p.display_yn AS displayYn,
		p.main_image AS mainImage,
		p.product_review_count AS
		productReviewCount,
		p.view_count AS
		viewCount,
		p.PRODUCT_DESCRIPTION AS
		productDescription,
		p.created_date AS createdDate,
		p.updated_date AS
		updatedDate,
		c1.name AS mainCategoryName,
		c2.name AS subCategoryName,
		(
		SELECT
		IFNULL(SUM(oi.quantity), 0)
		FROM tb_order_item oi
		WHERE
		oi.product_id =
		p.product_id
		) AS productSalesCount
		FROM tb_product p
		LEFT JOIN
		tb_category c2 ON p.category_id = c2.category_id
		LEFT JOIN
		tb_category
		c1 ON c2.parent_category_id = c1.category_id
		WHERE p.host_id
		=
		#{hostId}
		AND p.product_id = #{productId}
	</select>

	<update id="updateProductField">
		UPDATE tb_product
		<set>
			<if test="updates.salePrice != null">
				sale_price = #{updates.salePrice},
			</if>
			<if test="updates.stock != null">
				stock = #{updates.stock},
			</if>
			<if test="updates.status != null">
				product_status = #{updates.status},
			</if>
			<if test="updates.displayYn != null">
				display_yn = #{updates.displayYn},
			</if>
			updated_date = NOW()
		</set>
		WHERE host_id = #{hostId} AND product_id = #{productId}
	</update>

	<!-- 상품 등록 -->
	<insert id="insertProduct"
		parameterType="org.kosa.shoppingmaillmanager.host.product.entity.Product"
		useGeneratedKeys="true" keyProperty="productId">
		INSERT INTO tb_product (
		NAME,
		PRICE, SALE_PRICE,
		PRODUCT_DESCRIPTION, PRODUCT_SHORT_DESCRIPTION,
		PRODUCT_STATUS, PRODUCT_RATING, PRODUCT_REVIEW_COUNT,
		MAIN_IMAGE,
		VIEW_COUNT, STOCK,
		HOST_ID, category_id, display_yn,
		CREATED_DATE,
		UPDATED_DATE
		)
		VALUES (
		#{name}, #{price}, #{salePrice},
		#{productDescription}, #{productShortDescription},
		#{productStatus},
		0.0, 0,
		#{mainImage}, 0, #{stock},
		#{hostId}, #{categoryId}, 'Y',
		NOW(),
		NOW()
		)
	</insert>

	<!-- 옵션 등록 -->
	<insert id="insertProductOption"
		parameterType="org.kosa.shoppingmaillmanager.host.product.entity.ProductOption"
		useGeneratedKeys="true" keyProperty="optionId">
		INSERT INTO tb_product_options (
		PRODUCT_ID, OPTION_NAME, SALE_PRICE, STOCK, STATUS,
		CREATED_DATE,
		UPDATED_DATE
		)
		VALUES (
		#{productId}, #{optionName}, #{salePrice},
		#{stock}, #{status},
		NOW(), NOW()
		)
	</insert>

	<!-- 상품 수정 -->
	<update id="updateProduct">
		UPDATE tb_product
		SET
		name = #{name},
		price = #{price},
		sale_price = #{salePrice},
		stock = #{stock},
		product_status =
		#{productStatus},
		product_short_description =
		#{productShortDescription},
		product_description =
		#{productDescription},
		main_image = #{mainImage},
		category_id =
		#{categoryId},
		updated_date = NOW()
		WHERE product_id = #{productId} AND
		host_id = #{hostId}
	</update>

	<!-- 상품 옵션 전체 삭제 -->
	<delete id="deleteProductOptionsByProductId">
		DELETE FROM tb_product_options
		WHERE product_id =
		#{productId}
	</delete>

	<!-- 상품 단건 조회 (수정용) -->
	<select id="findProductById"
		resultType="org.kosa.shoppingmaillmanager.host.product.entity.Product">
		SELECT *
		FROM tb_product
		WHERE product_id = #{productId}
	</select>

	<!-- 옵션 목록 조회 -->
	<select id="findOptionsByProductId"
		resultType="org.kosa.shoppingmaillmanager.host.product.dto.ProductOptionDto">
		SELECT
		option_name AS optionName,
		sale_price AS salePrice,
		stock,
		status
		FROM tb_product_options
		WHERE product_id = #{productId}
	</select>

	<select id="findLowStockProducts"
		resultType="org.kosa.shoppingmaillmanager.host.product.dto.LowStockProductDto">
  <![CDATA[
    SELECT product_id AS productId,
           name,
           stock
    FROM tb_product
    WHERE host_id = #{hostId}
      AND stock <= 5
    ORDER BY stock ASC
    LIMIT 5
  ]]>
	</select>

	<select id="countLowStockProducts" resultType="int">
  <![CDATA[
    SELECT COUNT(*)
    FROM tb_product
    WHERE host_id = #{hostId}
      AND stock <= 5
  ]]>
	</select>
	
	<select id="findPopularProducts"
        resultType="org.kosa.shoppingmaillmanager.host.product.dto.PopularProductDto">
  <![CDATA[
    SELECT 
      p.product_id AS productId,
      p.name,
      p.main_image AS mainImage,
      IFNULL((
        SELECT SUM(oi.quantity)
        FROM tb_order_item oi
        WHERE oi.product_id = p.product_id
      ), 0) AS productSalesCount
    FROM tb_product p
    WHERE p.host_id = #{hostId}
      AND p.display_yn = 'Y'
    ORDER BY productSalesCount DESC
    LIMIT 5
  ]]>
</select>

<select id="countProductStatus" resultType="org.kosa.shoppingmaillmanager.host.product.dto.ProductStatusDto">
  SELECT
    COUNT(CASE WHEN product_status = '판매중' THEN 1 END) AS onSale,
    COUNT(CASE WHEN product_status = '판매중지' THEN 1 END) AS offSale,
    COUNT(CASE WHEN product_status = '품절' THEN 1 END) AS outOfStock
  FROM tb_product
  WHERE host_id = #{hostId}
</select>

</mapper>
